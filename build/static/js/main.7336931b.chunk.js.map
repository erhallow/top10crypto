{"version":3,"sources":["components/layout/Navbar.js","components/coins/CoinBox.js","components/coins/Coin.js","App.js","index.js"],"names":["Navbar","className","this","props","icon","title","Component","defaultProps","CoinBox","coin","name","image","price","dollarChange","percentChange","dollarVolume","lastUpdate","key","src","alt","Coin","coins","isLoaded","map","App","state","error","axios","get","then","response","data","Data","CoinInfo","Name","ImageUrl","DISPLAY","USD","PRICE","CHANGE24HOUR","CHANGEPCTDAY","VOLUMEDAYTO","LASTUPDATE","setState","console","log","catch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAGaA,EAAb,uKAYI,OACE,yBAAKC,UAAU,4BACb,4BACE,uBAAGA,UAAWC,KAAKC,MAAMC,OACxBF,KAAKC,MAAME,YAhBtB,GAA4BC,aAAfN,EACJO,aAAe,CACpBF,MAAO,wBACPD,KAAM,qBAoBKJ,QCGAQ,EA3BC,SAAC,GAUV,IAAD,IATJC,KACEC,EAQE,EARFA,KACAC,EAOE,EAPFA,MACAC,EAME,EANFA,MACAC,EAKE,EALFA,aACAC,EAIE,EAJFA,cACAC,EAGE,EAHFA,aACAC,EAEE,EAFFA,WAGF,OACE,yBAAKC,IAAKP,GACR,yBAAKT,UAAU,0CACb,4BAAKS,GACL,2BAAOQ,IAAKP,EAAOQ,IAAKT,IACxB,4BACE,4BAAKE,GACL,4BAAKC,GACL,4BAAKC,GACL,4BAAKC,GACL,4BAAKC,OCAAI,EAnBF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MACd,OADoC,EAAfC,SAEZ,yCAGL,6BACGD,EAAME,KAAI,SAACd,GAAD,OACT,kBAAC,EAAD,CAASQ,IAAKR,EAAKC,KAAMD,KAAMA,S,iBCyC1Be,G,kNA7CbC,MAAQ,CACNJ,MAAO,GACPC,UAAU,EACVI,MAAO,M,kEAGY,IAAD,OAClBC,IACGC,IACC,6EAEDC,MAAK,SAACC,GAAD,OACJA,EAASC,KAAKC,KAAKT,KAAI,SAACd,GAAD,MAAW,CAChCC,KAAK,GAAD,OAAKD,EAAKwB,SAASC,MACvBvB,MAAM,+BAAD,OAAiCF,EAAKwB,SAASE,UACpDvB,MAAM,GAAD,OAAKH,EAAK2B,QAAQC,IAAIC,OAC3BzB,aAAa,GAAD,OAAKJ,EAAK2B,QAAQC,IAAIE,cAClCzB,cAAc,GAAD,OAAKL,EAAK2B,QAAQC,IAAIG,cACnCzB,aAAa,GAAD,OAAKN,EAAK2B,QAAQC,IAAII,aAClCzB,WAAW,GAAD,OAAKP,EAAK2B,QAAQC,IAAIK,mBAGnCb,MAAK,SAACR,GACL,EAAKsB,SAAS,CACZtB,QACAC,UAAU,IAEZsB,QAAQC,IAAIxB,MAEbyB,OAAM,SAACpB,GAAD,OAAW,EAAKiB,SAAS,CAAEjB,QAAOJ,UAAU,S,+BAG7C,IAAD,EACqBpB,KAAKuB,MAAzBH,EADD,EACCA,SAAUD,EADX,EACWA,MAElB,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,MACA,yBAAKpB,UAAU,mBACb,kBAAC,EAAD,CAAMqB,SAAUA,EAAUD,MAAOA,U,GAxCzBf,cCFlByC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.7336931b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Navbar extends Component {\n  static defaultProps = {\n    title: 'CryptoCurrency Charts',\n    icon: 'fab fa-artstation',\n  };\n\n  static propTypes = {\n    title: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n  };\n\n  render() {\n    return (\n      <nav className='navbar bg-info text-dark'>\n        <h1>\n          <i className={this.props.icon}></i>\n          {this.props.title}\n        </h1>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from 'react';\n\nconst CoinBox = ({\n  coin: {\n    name,\n    image,\n    price,\n    dollarChange,\n    percentChange,\n    dollarVolume,\n    lastUpdate,\n  },\n}) => {\n  return (\n    <div key={name}>\n      <div className='container-fluid bg-success text-center'>\n        <h1>{name}</h1>\n        <image src={image} alt={name} />\n        <ul>\n          <li>{price}</li>\n          <li>{dollarChange}</li>\n          <li>{percentChange}</li>\n          <li>{dollarVolume}</li>\n          <li>{lastUpdate}</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\nexport default CoinBox;\n","import React from 'react';\nimport CoinBox from './CoinBox';\nimport PropTypes from 'prop-types';\n\nconst Coin = ({ coins, isLoaded }) => {\n  if (isLoaded) {\n    return <p>Loading...</p>;\n  } else {\n    return (\n      <div>\n        {coins.map((coin) => (\n          <CoinBox key={coin.name} coin={coin} />\n        ))}\n      </div>\n    );\n  }\n};\n\nCoin.propTypes = {\n  coins: PropTypes.array.isRequired,\n  isLoaded: PropTypes.bool.isRequired,\n};\n\nexport default Coin;\n","import React, { Component, Fragment } from 'react';\nimport Navbar from './components/layout/Navbar';\nimport Coin from './components/coins/Coin';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    coins: [],\n    isLoaded: false,\n    error: null,\n  };\n\n  componentDidMount() {\n    axios\n      .get(\n        'https://min-api.cryptocompare.com/data/top/totalvolfull?limit=10&tsym=USD'\n      )\n      .then((response) =>\n        response.data.Data.map((coin) => ({\n          name: `${coin.CoinInfo.Name}`,\n          image: `http://www.cryptocompare.com${coin.CoinInfo.ImageUrl}`,\n          price: `${coin.DISPLAY.USD.PRICE}`,\n          dollarChange: `${coin.DISPLAY.USD.CHANGE24HOUR}`,\n          percentChange: `${coin.DISPLAY.USD.CHANGEPCTDAY}`,\n          dollarVolume: `${coin.DISPLAY.USD.VOLUMEDAYTO}`,\n          lastUpdate: `${coin.DISPLAY.USD.LASTUPDATE}`,\n        }))\n      )\n      .then((coins) => {\n        this.setState({\n          coins,\n          isLoaded: false,\n        });\n        console.log(coins);\n      })\n      .catch((error) => this.setState({ error, isLoaded: false }));\n  }\n\n  render() {\n    const { isLoaded, coins } = this.state;\n\n    return (\n      <Fragment>\n        <Navbar />\n        <div className='container-fluid'>\n          <Coin isLoaded={isLoaded} coins={coins} />\n        </div>\n      </Fragment>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}