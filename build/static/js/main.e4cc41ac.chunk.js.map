{"version":3,"sources":["components/layout/Navbar.js","components/coins/CoinBox.js","components/coins/Coin.js","App.js","index.js"],"names":["Navbar","className","this","props","icon","title","Component","defaultProps","CoinBox","coin","name","image","price","dollarChange","percentChange","dollarVolume","lastUpdate","newDollar","replace","newDollarStyle","backgroundColor","fontWeight","console","log","key","src","alt","style","href","target","rel","Coin","coins","isLoaded","map","App","state","error","axios","get","then","response","data","Data","CoinInfo","Name","ImageUrl","DISPLAY","USD","PRICE","CHANGE24HOUR","CHANGEPCTDAY","VOLUMEDAYTO","LASTUPDATE","setState","catch","sort","a","b","onClick","sortPercentChangeNeg","sortPercentChangePos","sortDollarGain","sortDollarLoss","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4cc41ac.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Navbar extends Component {\n  static defaultProps = {\n    title: 'Top 10 Cryptocurrencies',\n    icon: 'fab fa-artstation',\n  };\n\n  static propTypes = {\n    title: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n  };\n\n  render() {\n    return (\n      <nav className='navbar navbarStyle text-white'>\n        <h1>\n          <i className={this.props.icon}></i>\n          {this.props.title}\n        </h1>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from 'react';\n\nconst CoinBox = ({\n  coin: {\n    name,\n    image,\n    price,\n    dollarChange,\n    percentChange,\n    dollarVolume,\n    lastUpdate,\n  },\n}) => {\n  let newDollar = dollarChange.replace(/[&;\\$]/g, '');\n  let newDollarStyle = { backgroundColor: '#BCF5C2', fontWeight: 'bold' };\n\n  console.log(newDollar);\n\n  if (newDollar < 1) {\n    newDollarStyle.backgroundColor = '#F5CDBC';\n  }\n\n  return (\n    <div key={name}>\n      <div className='container-fluid row border border-dark mb-2 mt-1'>\n        <div className='col text-white text-center border border-dark background pt-3'>\n          <div className='container'>\n            <div className='row align-items-center'>\n              <div className='col-sm'>\n                <h3>{name}</h3>\n              </div>\n\n              <div className='col-sm'>\n                <img src={image} alt={name} className='w-50 mb-3 bg-white' />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className='col border border-dark rounded-left text-center'>\n          {price}\n        </div>\n        <div\n          className='col border border-dark text-center'\n          style={newDollarStyle}\n        >\n          $ {newDollar}\n        </div>\n        <div className='col border border-dark text-center'>\n          %{percentChange}\n        </div>\n        <div className='col border border-dark text-center'>{dollarVolume}</div>\n        <div className='col border border-dark rounded-right text-center'>\n          <p>\n            {lastUpdate}{' '}\n            <a\n              href='https://www.cryptocompare.com/'\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              More...\n            </a>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default CoinBox;\n","import React from 'react';\nimport CoinBox from './CoinBox';\nimport PropTypes from 'prop-types';\n\nconst Coin = ({ coins, isLoaded }) => {\n  if (isLoaded) {\n    return <p>Loading...</p>;\n  } else {\n    return (\n      <div>\n        <div className='titlebar container-fluid'>\n          <div className='row'>\n            <div className='col bg-info'> </div>\n            <div className='col text-center bg-success'>Price ($)</div>\n            <div className='col text-center bg-info'>Dollar Change ($)</div>\n            <div className='col text-center bg-danger'>Percent Change (%)</div>\n            <div className='col text-center bg-success'>Dollar Volume ($)</div>\n            <div className='col text-center bg-danger'>Last Updated (min)</div>\n          </div>\n        </div>\n        {coins.map((coin) => (\n          <CoinBox key={coin.name} coin={coin} />\n        ))}\n      </div>\n    );\n  }\n};\n\nCoin.propTypes = {\n  coins: PropTypes.array.isRequired,\n  isLoaded: PropTypes.bool.isRequired,\n};\n\nexport default Coin;\n","import React, { Component, Fragment } from 'react';\nimport Navbar from './components/layout/Navbar';\nimport Coin from './components/coins/Coin';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    coins: [],\n    isLoaded: false,\n    error: null,\n  };\n\n  componentDidMount() {\n    axios\n      .get(\n        'https://min-api.cryptocompare.com/data/top/totalvolfull?limit=10&tsym=USD'\n      )\n      .then((response) =>\n        response.data.Data.map((coin) => ({\n          name: `${coin.CoinInfo.Name}`,\n          image: `http://www.cryptocompare.com${coin.CoinInfo.ImageUrl}`,\n          price: `${coin.DISPLAY.USD.PRICE}`,\n          dollarChange: `${coin.DISPLAY.USD.CHANGE24HOUR}`,\n          percentChange: `${coin.DISPLAY.USD.CHANGEPCTDAY}`,\n          dollarVolume: `${coin.DISPLAY.USD.VOLUMEDAYTO}`,\n          lastUpdate: `${coin.DISPLAY.USD.LASTUPDATE}`,\n        }))\n      )\n\n      .then((coins) => {\n        this.setState({\n          coins,\n          isLoaded: false,\n        });\n        console.log(coins);\n      })\n      .catch((error) => this.setState({ error, isLoaded: false }));\n  }\n\n  // Sort by Largest Percentage Loss first\n  sortPercentChangeNeg() {\n    const coins = [...this.state.coins].sort((a, b) => {\n      if (a.percentChange < b.percentChange) {\n        return -1;\n      }\n      if (a.percentChange > b.percentChange) {\n        return 1;\n      }\n      return 0;\n    });\n    this.setState({ coins: coins });\n  }\n\n  //Sort by Largest Percentage Gain first\n  sortPercentChangePos() {\n    const coins = [...this.state.coins].sort((a, b) => {\n      if (a.percentChange < b.percentChange) {\n        return 1;\n      }\n      if (a.percentChange > b.percentChange) {\n        return -1;\n      }\n      return 0;\n    });\n\n    this.setState({ coins: coins });\n  }\n\n  //Sort by Largest Dollar Loss first\n  sortDollarLoss() {\n    const coins = [...this.state.coins].sort((a, b) => {\n      if (a.dollarChange < b.dollarChange) {\n        return 1;\n      }\n      if (a.dollarChange > b.dollarChange) {\n        return -1;\n      }\n      return 0;\n    });\n    this.setState({ coins: coins });\n  }\n\n  //Sort by Largest Dollar Gain first\n  sortDollarGain() {\n    const coins = [...this.state.coins].sort((a, b) => {\n      if (a.dollarChange < b.dollarChange) {\n        return -1;\n      }\n      if (a.dollarChange > b.dollarChange) {\n        return 1;\n      }\n      return 0;\n    });\n    this.setState({ coins: coins });\n  }\n\n  render() {\n    const { isLoaded, coins } = this.state;\n\n    return (\n      <Fragment>\n        <Navbar />\n        <div className='container-fluid'>\n          <button onClick={() => this.sortPercentChangeNeg()}>\n            Sort by Percent Loss\n          </button>\n          <button onClick={() => this.sortPercentChangePos()}>\n            Sort by Percent Gain\n          </button>\n          <button onClick={() => this.sortDollarGain()}>\n            Sort by Dollar Loss\n          </button>\n          <button onClick={() => this.sortDollarLoss()}>\n            Sort by Dollar Gain\n          </button>\n        </div>\n        <div className='container-fluid'>\n          <Coin isLoaded={isLoaded} coins={coins} />\n        </div>\n      </Fragment>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}